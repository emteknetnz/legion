version: "3"

services:
  webserver_service_b:
    build: 
      context: ./dockerfiles/webserver
    container_name: 'webserver_name_b'
    restart: 'no'
    # ports:
    #   # TODO: either remove the port, or increment it
    #   # you could increment by cp this file with a new name
    #   # then use the new file to docker-compose up, later rm it
    #  - "1081:80"
    links: 
      - database_service_ab
    volumes: 
      # These are shared from Host to B, not from A to B
      # I don't beleive it's because of docker.sock, I think it's just how things are
      - ./../../../:/var/www/html
      - ./volumes/vhosts:/etc/apache2/sites-enabled
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
    command: 
      # this will be run by sh with a pwd of /var/www/html
      - vendor/emteknetnz/legion/commands/script-b.sh
  database_service_ab:  
    build: ./dockerfiles/database
    container_name: 'database_name_ab'
    restart: 'no'
    environment:
      MYSQL_ROOT_PASSWORD: root

# run unit test in container

# start containerphp
# docker-compose -f vendor/emteknetnz/legion/docker-compose-b.yml up


# ssh in to webserver
# docker exec -it $(docker ps | grep legion_b_webserver | sed -n -r 's/^([^ ]+).+$/\1/p') bash

# connect to mysql from websever
# mysql -uroot -proot -h database
